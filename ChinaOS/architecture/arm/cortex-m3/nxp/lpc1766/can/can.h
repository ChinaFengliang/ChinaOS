/******************************************************Copyright (c)**************************************************
**                                              胆怯是阻止一切可能的根本缘由
**
**                                             E-Mail: ChinaFengliang@163.com
**
**---------File Information-------------------------------------------------------------------------------------------
** File name:            can.h
** Last version:         V1.00
** Descriptions:         can文件.
** Hardware platform:    lpc1768
** SoftWare platform:    ChinaOS
**
**--------------------------------------------------------------------------------------------------------------------
** Created by:           Feng Liang
** Created date:         2011年12月13日  17:26:21
** Version:              V1.00
** Descriptions:         The original version
**
**--------------------------------------------------------------------------------------------------------------------
** Modified by: 
** Modified date:
** Version:
** Descriptions:
**
*********************************************************************************************************************/
#ifndef __CAN_H_
#define __CAN_H_

#ifdef __cplusplus
extern "C" {
#endif                                                                      /* __cplusplus                          */

/*********************************************************************************************************************
                                                    头文件区
*********************************************************************************************************************/
#include    <include/types.h>
#include    <kernel/mailbox/mailbox.h>
#include    <nvic/interrupt.h>

/*********************************************************************************************************************
                                                    宏定义区
*********************************************************************************************************************/
/* 消息类型 --------------------------------------------------------------------------------------------------------*/
#define     TYPE_DATA               (0ul << 30)                             /* 数据帧                               */
#define     TYPE_REMOTE             (1ul << 30)                             /* 遥控帧                               */

/* 消息格式 --------------------------------------------------------------------------------------------------------*/
#define     FORMAT_STANDARD         (0ul << 31)                             /* 标准帧                               */
#define     FORMAT_EXTENDED         (1ul << 31)                             /* 扩展帧                               */

/* 组合帧 ----------------------------------------------------------------------------------------------------------*/
#define     STANDARD_DATA           (FORMAT_STANDARD | TYPE_DATA)           /* 标准数据帧                           */
#define     STANDARD_REMOTE         (FORMAT_STANDARD | TYPE_REMOTE)         /* 标准遥控帧                           */
#define     EXTENDED_DATA           (FORMAT_EXTENDED | TYPE_DATA)           /* 扩展数据帧                           */
#define     EXTENDED_REMOTE         (FORMAT_EXTENDED | TYPE_REMOTE)         /* 扩展遥控帧                           */

/*********************************************************************************************************************
                                                    类型定义区
*********************************************************************************************************************/
/* 特征清单类型 ----------------------------------------------------------------------------------------------------*/
struct __can_feature
{
    INT32U          BaseAddress;                                            /* 寄存器基址                           */
    int             Priority;                                               /* 中断优先级                           */
    enum irq_t      Irq;                                                    /* 中断通道号                           */
    void          (*pException)(void);                                      /* 中断服务                             */

    MAILBOX         SendMailBox;                                            /* 发送完成邮箱                         */
    void           *pRecvPipe;                                              /* 接收管道                             */

    INT8U           SJW;                                                    /* 再同步位宽                           */
    INT8U           PBS1;                                                   /* 相位缓冲段1                          */
    INT8U           PBS2;                                                   /* 相位缓冲段2                          */
};
typedef struct __can_feature                        CAN_FEATURE;            /* can设备特征类型                      */

/* CAN消息报文类型 -------------------------------------------------------------------------------------------------*/
struct __can_message
{
  INT32U            ID;                                                     /* 标识码                               */
  char              aData[8];                                               /* Data field                           */
  INT8U             Size;                                                   /* Length of data field in bytes        */
};
typedef struct __can_message                        CAN_MESSAGE;

/* 设备功能类型 ----------------------------------------------------------------------------------------------------*/
struct __class_can
{
    int          (*setup)(void);                                            /* 安装设备                             */
    int          (*cleanup)(void);                                          /* 卸装设备                             */
    int          (*send)(CAN_MESSAGE *pMessage, int Timeout);               /* 发送消息报文                         */
    int          (*recv)(CAN_MESSAGE *pMessage, int Timeout);               /* 接收消息报文                         */
    int          (*add_message)(INT32U MessageID);                          /* 添加接收消息ID                       */
    int          (*remove_message)(INT32U MessageID);                       /* 移除接收消息ID                       */
};
typedef struct __class_can                          CLASS_CAN;              /* can设备类型                          */

/*********************************************************************************************************************
** Function name:           can_setup
** Descriptions:            can类设备安装
** Input parameters:        pThis    : 设备控制器
** Output parameters:       
** Returned value:          ==OS_OK : 操作成功
**                          !=OS_OK : 操作失败(包含出错信息)
**--------------------------------------------------------------------------------------------------------------------
** Created by:              Feng Liang
** Created Date:            2011-12-13  17:13:54
** Test recorde:            
**--------------------------------------------------------------------------------------------------------------------
** Modified by:
** Modified date:
** Test recorde: 
*********************************************************************************************************************/
int can_setup(CAN_FEATURE *pThis);

/*********************************************************************************************************************
** Function name:           can_send
** Descriptions:            can类设备发送消息报文
** Input parameters:        pThis    : 设备控制器
**                          pMessage : 消息报文
**                          Timeout  : 超时时间(单位: 毫秒)
** Output parameters:       
** Returned value:          ==OS_OK : 操作成功
**                          !=OS_OK : 操作失败(包含出错信息)
**--------------------------------------------------------------------------------------------------------------------
** Created by:              Feng Liang
** Created Date:            2011-12-13  17:18:29
** Test recorde:            
**--------------------------------------------------------------------------------------------------------------------
** Modified by:
** Modified date:
** Test recorde: 
*********************************************************************************************************************/
int can_send(const CAN_FEATURE *pThis, CAN_MESSAGE *pMessage, int Timeout);

/*********************************************************************************************************************
** Function name:           can_recv
** Descriptions:            can类设备接收消息报文
** Input parameters:        pThis    : 设备特征清单
**                          pMessage : 消息报文
**                          Timeout  : 超时时间(单位: 毫秒)
** Output parameters:       
** Returned value:          ==OS_OK : 操作成功
**                          !=OS_OK : 操作失败(包含出错信息)
**--------------------------------------------------------------------------------------------------------------------
** Created by:              Feng Liang
** Created Date:            2011-12-13  17:19:4
** Test recorde:            
**--------------------------------------------------------------------------------------------------------------------
** Modified by:
** Modified date:
** Test recorde: 
*********************************************************************************************************************/
int can_recv(const CAN_FEATURE *pThis, CAN_MESSAGE *pMessage, int Timeout);

/*********************************************************************************************************************
** Function name:           can_cleanup
** Descriptions:            can类设备卸载
** Input parameters:        pThis   : 设备控制器
** Output parameters:       
** Returned value:          ==OS_OK : 操作成功
**                          !=OS_OK : 操作失败(包含出错信息)
**--------------------------------------------------------------------------------------------------------------------
** Created by:              Feng Liang
** Created Date:            2011-12-13  17:15:12
** Test recorde:            
**--------------------------------------------------------------------------------------------------------------------
** Modified by:
** Modified date:
** Test recorde: 
*********************************************************************************************************************/
int can_cleanup(const CAN_FEATURE *pThis);

/*********************************************************************************************************************
** Function name:           get_message_type
** Descriptions:            获取消息类型
** Input parameters:        MessageID : 消息标识码
** Output parameters:       
** Returned value:          ==0 : 非法消息
**                          ==1 : 
**                          ==2 : 
**                          ==3 : 
**                          ==4 : 
**--------------------------------------------------------------------------------------------------------------------
** Created by:              Feng Liang
** Created Date:            2011-12-19  1:28:59
** Test recorde:            
**--------------------------------------------------------------------------------------------------------------------
** Modified by:
** Modified date:
** Test recorde: 
*********************************************************************************************************************/
int get_message_type(INT32U MessageID);

    

#ifdef __cplusplus
}
#endif                                                                      /* __cplusplus                          */

#endif                                                                      /* end of __CAN_H_                      */
/*********************************************************************************************************************
                                                    END OF FILE
*********************************************************************************************************************/


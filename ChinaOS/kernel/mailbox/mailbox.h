/******************************************************Copyright (c)**************************************************
**
**                              Copyright (c) 2009,2011 Fengliang And His Friends Corporation.
**
**                                             E-Mail: ChinaFengliang@163.com
**
**
**---------File Information-------------------------------------------------------------------------------------------
** File name:            mail.h
** Last version:         V1.00
** Descriptions:         邮件通信机制.
** Hardware platform:    
** SoftWare platform:    ChinaOS
**
**--------------------------------------------------------------------------------------------------------------------
** Created by:           FengLiang
** Created date:         2011年2月23日  14:0:14
** Version:              V1.00
** Descriptions:         The original version
**
**--------------------------------------------------------------------------------------------------------------------
** Modified by: 
** Modified date:
** Version:
** Descriptions:
**
*********************************************************************************************************************/
#ifndef __MAIL_H
#define __MAIL_H

#ifdef __cplusplus
extern "C" {
#endif                                                                      /* __cplusplus                          */

/*********************************************************************************************************************
                                                    头文件区
*********************************************************************************************************************/
#include    "../kernel.h"


/*********************************************************************************************************************
                                                    宏定义区
*********************************************************************************************************************/
/* 宏段名 ----------------------------------------------------------------------------------------------------------*/


/*********************************************************************************************************************
                                                    类型定义区
*********************************************************************************************************************/
/* 邮件箱类型 ------------------------------------------------------------------------------------------------------*/
typedef void *                                      MAIL;                   /* 邮件类型                             */
typedef void *                                      MAILBOX;                /* 邮箱类型                             */
enum mailbox_status
{
    VALID,                                                                  /* 有效邮箱                             */
    INVALID,                                                                /* 无效邮箱                             */
};

/* 邮箱头类型 ------------------------------------------------------------------------------------------------------*/
struct mailbox_t
{
    INT32U                           Size;                                  /* 消息邮箱大小                         */
    INT32U                           Read;                                  /* 读出数据索引                         */
    INT32U                           Write;                                 /* 写入数据索引                         */
    THREAD                          *pThread;                               /* 邮件收取线程                         */
    enum mailbox_status              Status;                                /* 邮箱状态                             */
    MAIL                             Mail[1];                               /* 邮件空间                             */
};

/*********************************************************************************************************************
** Function name:           mailbox_new
** Descriptions:            新建消息邮箱
** Input parameters:        Size : 邮件箱大小
** Output parameters:       
** Returned value:          ==NULL  : 操作失败
**                          !=NULL  : 操作成功(包含消息邮箱)
**--------------------------------------------------------------------------------------------------------------------
** Created by:              Fengliang
** Created Date:            2011-2-23  17:12:36
** Test recorde:            
**--------------------------------------------------------------------------------------------------------------------
** Modified by:
** Modified date:
** Test recorde: 
*********************************************************************************************************************/
MAILBOX mailbox_new(INT32U Size);

/*********************************************************************************************************************
** Function name:           mailbox_free
** Descriptions:            释放消息邮箱
** Input parameters:        Mailbox : 消息邮箱
** Output parameters:       
** Returned value:          ==OS_OK : 操作成功
**                          !=OS_OK : 操作失败(包含出错信息)
**--------------------------------------------------------------------------------------------------------------------
** Created by:              Fengliang
** Created Date:            2011-4-13  2:33:9
** Test recorde:            
**--------------------------------------------------------------------------------------------------------------------
** Modified by:
** Modified date:
** Test recorde: 
*********************************************************************************************************************/
int mailbox_free(MAILBOX Mailbox);

/*********************************************************************************************************************
** Function name:           mailbox_create
** Descriptions:            创建邮件箱
** Input parameters:        Mailbox : 消息邮箱
**                          Size    : 邮箱大小
** Output parameters:       
** Returned value:          ==OS_OK  : 操作成功
**                          !=OS_OK  : 操作失败(包含出错信息)
**--------------------------------------------------------------------------------------------------------------------
** Created by:              Fengliang
** Created Date:            2011-2-23  17:12:36
** Test recorde:            
**--------------------------------------------------------------------------------------------------------------------
** Modified by:
** Modified date:
** Test recorde: 
*********************************************************************************************************************/
int mailbox_create(MAILBOX Mailbox, INT32U Size);

/*********************************************************************************************************************
** Function name:           mail_fetch
** Descriptions:            非阻塞方式获取邮件. 
** Input parameters:        pMailbox : 邮件箱的指针
** Output parameters:       pMessage : 邮件指针
** Returned value:          ==OS_OK : 操作成功。信箱非空,获取邮件成功.
**                          !=OS_OK : 操作失败. 信箱为空,获取邮件失败.
**--------------------------------------------------------------------------------------------------------------------
** Created by:              Fengliang
** Created Date:            2011-5-10  18:20:52
** Test recorde:            
**--------------------------------------------------------------------------------------------------------------------
** Modified by:
** Modified date:
** Test recorde: 
*********************************************************************************************************************/
int mail_fetch(MAILBOX Mailbox, MAIL *pMessage);

/*********************************************************************************************************************
** Function name:           mail_wait
** Descriptions:            等待邮件
** Input parameters:        Mailbox  : 邮件箱
** Output parameters:       pMessage : 邮件指针
** Returned value:          == OS_OK : 操作成功
**                          != OS_OK : 操作失败(包含出错信息)
**--------------------------------------------------------------------------------------------------------------------
** Created by:              Fengliang
** Created Date:            2010-9-20  16:8:24
** Test recorde:
**--------------------------------------------------------------------------------------------------------------------
** Modified by:
** Modified date:
** Test recorde:
*********************************************************************************************************************/
int mail_wait(MAILBOX Mailbox, MAIL *pMessage, INT32U Timeout);

/*********************************************************************************************************************
** Function name:           mail_post
** Descriptions:            发送邮件
** Input parameters:        pMailbox : 邮件箱的指针
**                          Message  : 邮件内容
** Output parameters:       
** Returned value:          ==OS_OK : 操作成功
**                          !=OS_OK : 操作失败(包含出错信息)
**--------------------------------------------------------------------------------------------------------------------
** Created by:              Fengliang
** Created Date:            2011-2-23  14:2:3
** Test recorde:            
**--------------------------------------------------------------------------------------------------------------------
** Modified by:
** Modified date:
** Test recorde: 
*********************************************************************************************************************/
int mail_post(MAILBOX Mailbox, MAIL Message);

#ifdef __cplusplus
}
#endif                                                                      /* __cplusplus                          */

#endif                                                                      /* end of __MAIL_H                      */

/*********************************************************************************************************************
                                                    END OF FILE
*********************************************************************************************************************/

